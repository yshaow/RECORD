1.从输入URL到页面加载完成的过程中都发生了什么事情？
    1> 浏览器接收URL
       URL包含的信息：协议 网络地址:端口号  资源路径 查询字符串(?) 片段标识符(#)
    2> 将URL与缓存进行比对 ，如果请求的页面在缓存中且未过期，则直接进入第8步

        缓存分为彻底缓存和缓存协商，这里的确认是否过期是指彻底缓存(缓存失效之前不再需要更服务器交互)。
        》彻底缓存的机制 ：http首部字段 cache-control 、 Expires
          Expires是一个绝对时间，即服务器时间，浏览器检测当前时间，如果还没到失效时间就直接使用缓存文件。但是该方法存在一个问题：
          服务器时间与客户端时间可能不一致。因此该字段已经很少使用，现在基本用cache-control进行判断。

          cache-control中的max-age保存了一个相对的时间。如：cache-control:max-age=484200，表示浏览器收到文件后，缓存在484200s内均
          有效，如果同时存在cache-control和expires浏览器总是优先使用cache-control。
          cache-control的其他指令：
          //请求/响应指令
          》no-cache,使用缓存前必须和服务器进行确认，也就是需要发起请求
          》no-store,不缓存
          //响应指令
          》public，缓存文件保存在缓存服务器上，且其他用户也可以访问
          》private，只有特定用户才能访问该缓存资源
        》当缓存过期时，浏览器会向服务器发起请求询问资源是否真正过期，这就是缓存协商。
          对应http首部字段：last-modified，Etag

          》last-modified是第一次请求资源时，服务器返回的字段，表示最后一次更新的时间。下一次浏览器请求资源时就发送if-modified-since字段
            服务器用本地Last-modified时间与if-modified-since时间比较，如果不一致则认为缓存过期并返回新资源给浏览器；如果时间一致则发送304
            状态码，让浏览器继续使用缓存。当然用该方法也存在问题，如：修改时间有变化但实际内容没有变化而服务器却再次将资源发送给浏览器，所
            以使用Etag进行判断更好。
          》Etag 资源的实体标识(哈希字符串)，当资源内容更新时，Etag会改变。服务器会判断Etag是否发生变化，如果变化则返回新资源，否则返回304。

          缓存协商的过程需要发起一次http请求，如果返回304则继续使用缓存，对于移动端一次请求还是有代价的，所以我们需要避免304。
          对于很少进行更改的静态文件，可以在文件名中加入版本号如：get.v1.js并且把cache-control的max-age设置成一年半载，这样就不会发送请求了。

          需要注意的是：当这些文件更新的时候，我们需要更新其版本号，这样浏览器才会到服务器下载新资源。

        》缓存机制图
                                        用户请求资源
                                            |
                                        是否存在缓存 -----------------------------no
                                            |                                     |
                                           yes                                    |
                                            |                                     |
                    no----------判断缓存是否过期                                  |
                    |                       |                                     |
                    |                     yes                                     |
                    |                       |                                     |
          直接使用缓存                判断Etag -----no----判断Last-modified----   |
                    |                       |                    |             |  |
                    |                       yes                  yes           no |
                    |                       |                    |             |  |
                    |                  向服务器请求         向服务器请求       |  |
                    |                  If-none-match        If-modified-since  |  |
                    |                             |              |             |  |
                    |                          服务器返回200还是304           向服务器请求
                    |                                  |         |                |
                    |                                 304       200               |
                    |                                  |         |                |
                    |                            服务器返回304   |                |
                    |                            读取本地缓存    |-----------请求响应，缓存协商
                    |                                  |                          |
                    |                                  |                          |
                    |                                  |                          |
                     -----------------------------返回展示资源--------------------|
        除了http首部设置缓存，html5的manifest属性(指向一个需要缓存的文件地址)也可以设置缓存，但现在已经被标准舍弃，也就没有讨论的必要了。
    3>  如果网络地址不是一个IP地址，通过DNS解析域名返回一个IP地址
        》DNS协议
            DNS(domain name system)数据库是域名和IP地址相互映射的一个分布式数据库，DNS协议用来将域名转换为IP地址。
            它运行在UDP协议之上。
            为什么选择UDP而非TCP？原因：UDP无需连接，时效性更好，进行一次查询只需要两个DNS包。而TCP需要先用3个包建立连接，在用
            2个DNS包进行查询，最后用4个包断开连接，连接成本远大于查询本身，容易让DNS服务器不堪重负。

        》DNS查询
            操作系统会先检查本地hosts文件是否有这个网址映射关系，如果有就调用这个IP地址映射，完成域名解析。
            否则，查找本地DNS解析器缓存，如果查找到则返回
            否则，查找本地DNS服务器，如果查找到则返回
            否则，1）未用转发模式，按根域服务器 ->顶级域,.com->第二层域，example.com ->子域，www.example.com的顺序找到IP地址。
                  2）用转发模式，按上一级DNS服务器->上上级->....逐级向上查询找到IP地址。
    4> 浏览器与服务器通过三次握手 SYN SYN/ACK ACK建立TCP连接
        https://www.jianshu.com/p/71cf7f69eca8








