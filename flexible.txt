//****flexible.js 自动适配移动端****
;(function(win, lib) {  
    var doc = win.document;  
    var docEl = doc.documentElement;  
    var metaEl = doc.querySelector('meta[name="viewport"]');  
    var flexibleEl = doc.querySelector('meta[name="flexible"]');  
    var dpr = 0;  
    var scale = 0;  
    var tid;  
    var flexible = lib.flexible || (lib.flexible = {});  
  
    if (metaEl) {  
        console.warn('将根据已有的meta标签来设置缩放比例');  
        var match = metaEl.getAttribute('content').match(/initial\-scale=([\d\.]+)/);  
        if (match) {  
            scale = parseFloat(match[1]);  
            dpr = parseInt(1 / scale);  
        }  
    } else if (flexibleEl) {  
        var content = flexibleEl.getAttribute('content');  
        if (content) {  
            var initialDpr = content.match(/initial\-dpr=([\d\.]+)/);  
            var maximumDpr = content.match(/maximum\-dpr=([\d\.]+)/);  
            if (initialDpr) {  
                dpr = parseFloat(initialDpr[1]);  
                scale = parseFloat((1 / dpr).toFixed(2));      
            }  
            if (maximumDpr) {  
                dpr = parseFloat(maximumDpr[1]);  
                scale = parseFloat((1 / dpr).toFixed(2));  
            }  
        }  
    }  
  
    if (!dpr && !scale) {  
        var isAndroid = win.navigator.appVersion.match(/android/gi);  
        var isIPhone = win.navigator.appVersion.match(/iphone/gi);  
        var devicePixelRatio = win.devicePixelRatio;  
        //var isRegularDpr = devicePixelRatio.toString().match(/^[1-9]\d*$/g);  
        if (isIPhone) {  
            // 对于2和3的屏，用2倍的方案，其余的用1倍方案  
            if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {                  
                dpr = 3;  
            } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){  
                dpr = 2;  
            } else {  
                dpr = 1;  
            }  
        } else {  
            // 其他设备下，仍旧使用1倍的方案  
            dpr = 1;  
        }  
        scale = 1 / dpr;  
    }  
  
    docEl.setAttribute('data-dpr', dpr);  
    if (!metaEl) {  
        metaEl = doc.createElement('meta');  
        metaEl.setAttribute('name', 'viewport');  
        //Android target-densitydpi=device-dpi  
        var attribute = 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no';  
        //判断是否是WebView  
        var app = getCookie('chelun_appName');  
        if(app) {  
            attribute = 'width=device-width,'+attribute;  
        }  
        metaEl.setAttribute('content', attribute);  
        if (docEl.firstElementChild) {  
            docEl.firstElementChild.appendChild(metaEl);  
        } else {  
            var wrap = doc.createElement('div');  
            wrap.appendChild(metaEl);  
            doc.write(wrap.innerHTML);  
        }  
    }  
  
    function getCookie(name){  
        var maps = {};  
        var cookArr = document.cookie.split(';')  
        for(var i in cookArr){  
            var tmp = cookArr[i].replace(/^\s*/, '');  
            if(tmp){  
                var nv = tmp.split('=');  
                maps[nv[0]] = nv[1] || '';  
            }  
        }  
        return maps[name];  
    }  
    function refreshRem(){  
        var width = docEl.getBoundingClientRect().width;  
        if (width / dpr > 540) {  
            width = 540 * dpr;  
        }  
        var rem = width / 10;  
        docEl.style.fontSize = rem + 'px';  
        flexible.rem = win.rem = rem;  
    }  
  
    win.addEventListener('resize', function() {  
        clearTimeout(tid);  
        tid = setTimeout(refreshRem, 300);  
    }, false);  
    win.addEventListener('pageshow', function(e) {  
        if (e.persisted) {  
            clearTimeout(tid);  
            tid = setTimeout(refreshRem, 300);  
        }  
    }, false);  
  
    if (doc.readyState === 'complete') {  
        //doc.body.style.fontSize = 12 * dpr + 'px';  
    } else {  
        doc.addEventListener('DOMContentLoaded', function(e) {  
            //doc.body.style.fontSize = 12 * dpr + 'px';  
        }, false);  
    }  
  
    refreshRem();  
  
    flexible.dpr = win.dpr = dpr;  
    flexible.refreshRem = refreshRem;  
    flexible.rem2px = function(d) {  
        var val = parseFloat(d) * this.rem;  
        if (typeof d === 'string' && d.match(/rem$/)) {  
            val += 'px';  
        }  
        return val;  
    }  
    flexible.px2rem = function(d) {  
        var val = parseFloat(d) / this.rem;  
        if (typeof d === 'string' && d.match(/px$/)) {  
            val += 'rem';  
        }  
        return val;  
    }  
  
})(window, window['lib'] || (window['lib'] = {}));  
//*********使用********
》引入flexible.js
	在html页面里面，尽可能早的引入该js文件--适配更快
	不需要写 viewport的meta  让flexible自动处理
》编写css
	》除了font-size外，其他大小都根据750标注稿的尺寸，转换成rem单位的值。
		转换方法：标注稿尺寸/标注稿基准字体大小
	》标注稿基准字体大小=标注稿宽度/10，如：标注稿宽750，标注稿基准字体大小75;标注搞宽640，标注稿基准字体大小为64。
		--即**淘宝这个方案是可以在任意设计稿尺寸下使用的**
	》如果需要设置font-size，可根据html的data-dpr属性来处理
		字体大小用px单位，并根据情况用[data-dpr]属性来区分不同dpr下的文本字号大小
		默认 data-dpr='1' p{
			font-size:12px;
		}
		[data-dpr="2"] p {
		  font-size: 24px;
		}
		[data-dpr="3"] p {
		  font-size: 36px;
		}
		混合宏：
		@mixin font-dpr($font-size){
		　font-size: $font-size;
		　[data-dpr="2"] & {
		　 font-size: $font-size * 2;
		 }
		 [data-dpr="3"] & {
		　 font-size: $font-size * 3;
		 }
		}
		//使用
		@include font-dpr(24px);
http://www.w3cplus.com/mobile/lib-flexible-for-html5-layout.html